// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3d24c13-df03-4b34-846f-e1b2fb6f9e35"),
                            Author = "Author- 1",
                            CategoryId = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Title = "title - 1"
                        },
                        new
                        {
                            Id = new Guid("e92f1bc6-5575-40bc-a299-7f53b1305c17"),
                            Author = "Author- 2",
                            CategoryId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Title = "title - 2"
                        },
                        new
                        {
                            Id = new Guid("12b5d8e3-6c80-41e3-bb97-a92ca842e74b"),
                            Author = "Author- 3",
                            CategoryId = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Title = "title - 3"
                        },
                        new
                        {
                            Id = new Guid("43e77e33-c892-4c80-a92e-b2055a284884"),
                            Author = "Author- 4",
                            CategoryId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Title = "title - 4"
                        },
                        new
                        {
                            Id = new Guid("bc9eca93-9c32-4db0-ae3d-46247d7cb234"),
                            Author = "Author- 5",
                            CategoryId = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Title = "title - 5"
                        },
                        new
                        {
                            Id = new Guid("92a2d71f-8635-4651-bd6a-3b9350d6d3b9"),
                            Author = "Author- 6",
                            CategoryId = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Title = "title - 6"
                        },
                        new
                        {
                            Id = new Guid("7dd8925b-6d57-489b-a91b-6f437e098bc0"),
                            Author = "Author- 7",
                            CategoryId = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Title = "title - 7"
                        },
                        new
                        {
                            Id = new Guid("cc70a7e1-5333-4fa1-abd6-ea00fbd746bb"),
                            Author = "Author- 8",
                            CategoryId = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Title = "title - 8"
                        },
                        new
                        {
                            Id = new Guid("41f61e17-4e0f-4d96-b9a6-dfd9a5328400"),
                            Author = "Author- 9",
                            CategoryId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Title = "title - 9"
                        },
                        new
                        {
                            Id = new Guid("dacb29cd-e2d0-4831-8a34-b45d1c588f23"),
                            Author = "Author- 10",
                            CategoryId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Title = "title - 10"
                        },
                        new
                        {
                            Id = new Guid("c2382d94-f036-43d0-b5e1-a3379c8abbe7"),
                            Author = "Author- 11",
                            CategoryId = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Title = "title - 11"
                        },
                        new
                        {
                            Id = new Guid("a2e967e4-4f74-432d-b10a-6efde12ba536"),
                            Author = "Author- 12",
                            CategoryId = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Title = "title - 12"
                        },
                        new
                        {
                            Id = new Guid("dcf8345b-fbbf-4290-9552-d7b62f211e28"),
                            Author = "Author- 13",
                            CategoryId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Title = "title - 13"
                        },
                        new
                        {
                            Id = new Guid("2670c404-568f-4d95-a3f0-ca2f2f5294a5"),
                            Author = "Author- 14",
                            CategoryId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Title = "title - 14"
                        },
                        new
                        {
                            Id = new Guid("2721fc24-fac7-49fd-8574-82e9aad69c72"),
                            Author = "Author- 15",
                            CategoryId = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Title = "title - 15"
                        },
                        new
                        {
                            Id = new Guid("3b3714d9-fb97-43b0-a7be-702f57ddc8e1"),
                            Author = "Author- 16",
                            CategoryId = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Title = "title - 16"
                        },
                        new
                        {
                            Id = new Guid("1e55a35b-830f-4002-aa81-15f202ac36bc"),
                            Author = "Author- 17",
                            CategoryId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Title = "title - 17"
                        },
                        new
                        {
                            Id = new Guid("0a6292e7-60e3-4720-bd80-8428b30d5165"),
                            Author = "Author- 18",
                            CategoryId = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Title = "title - 18"
                        },
                        new
                        {
                            Id = new Guid("3b5951eb-4439-4a4f-a2b5-53f5c3d381a4"),
                            Author = "Author- 19",
                            CategoryId = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Title = "title - 19"
                        },
                        new
                        {
                            Id = new Guid("d3d44664-aabe-4062-9424-b72a0dd5a783"),
                            Author = "Author- 20",
                            CategoryId = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Title = "title - 20"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            CreatedAt = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sam Raiden"
                        },
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            CreatedAt = new DateTime(2000, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jana McLeaf"
                        },
                        new
                        {
                            Id = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedAt = new DateTime(2000, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kane Miller"
                        },
                        new
                        {
                            Id = new Guid("eeecb951-e754-4a62-92ed-9e67afbddea3"),
                            CreatedAt = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = new Guid("bf062b47-518e-4ae9-9702-bb24b1fb1df0"),
                            CreatedAt = new DateTime(2000, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = new Guid("fec3f736-3971-41c2-a0cd-428b91c2a8a7"),
                            CreatedAt = new DateTime(2000, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = new Guid("fc3f1d34-5979-45ed-b8fc-f78a9a3e3f75"),
                            CreatedAt = new DateTime(2000, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 4"
                        },
                        new
                        {
                            Id = new Guid("876bfeba-5d3d-40f7-a5d2-2326e22049ff"),
                            CreatedAt = new DateTime(2000, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 5"
                        },
                        new
                        {
                            Id = new Guid("58e06b6a-f6c8-4ea6-a4d3-73948d0b881e"),
                            CreatedAt = new DateTime(2000, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 6"
                        },
                        new
                        {
                            Id = new Guid("71b84be7-a1f6-49c0-b508-eacdfedd5564"),
                            CreatedAt = new DateTime(2000, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 7"
                        },
                        new
                        {
                            Id = new Guid("1c081b92-ee42-41cb-9f55-55ab303890b7"),
                            CreatedAt = new DateTime(2000, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 8"
                        },
                        new
                        {
                            Id = new Guid("1cc12751-9fa0-4b80-9d3b-740a1b053dcd"),
                            CreatedAt = new DateTime(2000, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 9"
                        },
                        new
                        {
                            Id = new Guid("53ca0c73-abbb-4c81-a97b-f6b571f41fc0"),
                            CreatedAt = new DateTime(2000, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 10"
                        },
                        new
                        {
                            Id = new Guid("f23f2aaa-b3e0-4423-816f-a9be5ca471c7"),
                            CreatedAt = new DateTime(2000, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 11"
                        },
                        new
                        {
                            Id = new Guid("84433fc2-1509-4622-827c-587ef8016758"),
                            CreatedAt = new DateTime(2000, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 12"
                        },
                        new
                        {
                            Id = new Guid("cdd5fe04-33da-4945-b8f1-738635ee6718"),
                            CreatedAt = new DateTime(2000, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 13"
                        },
                        new
                        {
                            Id = new Guid("53143645-5c91-4818-8607-3e71c4e96550"),
                            CreatedAt = new DateTime(2000, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 14"
                        },
                        new
                        {
                            Id = new Guid("de165303-11ab-4340-b544-bfe17138ab9c"),
                            CreatedAt = new DateTime(2000, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 15"
                        },
                        new
                        {
                            Id = new Guid("94da5813-9391-4f11-bf89-1d431f45b23d"),
                            CreatedAt = new DateTime(2000, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 16"
                        },
                        new
                        {
                            Id = new Guid("ba747abf-6e09-4dff-a26a-b534b8806eb4"),
                            CreatedAt = new DateTime(2000, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 17"
                        },
                        new
                        {
                            Id = new Guid("00c9f8b2-cb32-46e3-94c8-6d66b985dccd"),
                            CreatedAt = new DateTime(2000, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 18"
                        },
                        new
                        {
                            Id = new Guid("07df5a07-98f1-44f5-9285-74e8d5fdbc75"),
                            CreatedAt = new DateTime(2000, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 19"
                        },
                        new
                        {
                            Id = new Guid("c6e25fe4-15c6-4e37-ac1f-caee504f0a17"),
                            CreatedAt = new DateTime(2000, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 20"
                        },
                        new
                        {
                            Id = new Guid("389456d4-d993-4047-b947-620542cf53c5"),
                            CreatedAt = new DateTime(2000, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 21"
                        },
                        new
                        {
                            Id = new Guid("a5344d0e-380e-4704-a8bd-0040c9db400b"),
                            CreatedAt = new DateTime(2000, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 22"
                        },
                        new
                        {
                            Id = new Guid("4007407c-bbaf-4de6-b405-514f7618b208"),
                            CreatedAt = new DateTime(2000, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 23"
                        },
                        new
                        {
                            Id = new Guid("b06c102f-2056-43c4-864d-1c375e0f42b7"),
                            CreatedAt = new DateTime(2000, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 24"
                        },
                        new
                        {
                            Id = new Guid("22eb8d2c-98a4-4042-9b82-2f00a4e17869"),
                            CreatedAt = new DateTime(2000, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 25"
                        },
                        new
                        {
                            Id = new Guid("0b512a6e-6ff0-45bc-bcb1-8e782bd05cee"),
                            CreatedAt = new DateTime(2000, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 26"
                        },
                        new
                        {
                            Id = new Guid("ce3fe6de-5cb8-46df-85ea-98a44986ff16"),
                            CreatedAt = new DateTime(2000, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 27"
                        },
                        new
                        {
                            Id = new Guid("1a5cd1c5-a834-4516-ad9c-eb92e219d2c3"),
                            CreatedAt = new DateTime(2000, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 28"
                        },
                        new
                        {
                            Id = new Guid("4bec0bca-430a-4ad3-b955-ad6728988f97"),
                            CreatedAt = new DateTime(2000, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 29"
                        },
                        new
                        {
                            Id = new Guid("9b3a28bb-249e-496f-bbc8-0b91884a7618"),
                            CreatedAt = new DateTime(2000, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 30"
                        },
                        new
                        {
                            Id = new Guid("03975dbc-1bb5-43d2-842a-6327c94c987c"),
                            CreatedAt = new DateTime(2000, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 31"
                        },
                        new
                        {
                            Id = new Guid("7320ba02-a25e-45ee-a578-d0fc416e9ed7"),
                            CreatedAt = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 32"
                        },
                        new
                        {
                            Id = new Guid("90199e46-811f-49dc-8833-f478bffbd063"),
                            CreatedAt = new DateTime(2000, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 33"
                        },
                        new
                        {
                            Id = new Guid("77303be3-8924-4e5a-87dc-3197bcad905e"),
                            CreatedAt = new DateTime(2000, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 34"
                        },
                        new
                        {
                            Id = new Guid("f9a33301-35ce-4181-a8e3-c0ae358f15cf"),
                            CreatedAt = new DateTime(2000, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 35"
                        },
                        new
                        {
                            Id = new Guid("cf7298be-b1a8-40ee-9683-5cdf4a44ba72"),
                            CreatedAt = new DateTime(2000, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 36"
                        },
                        new
                        {
                            Id = new Guid("37bf21bb-4923-4c5d-a82f-bb834547ae16"),
                            CreatedAt = new DateTime(2000, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 37"
                        },
                        new
                        {
                            Id = new Guid("419cc9ce-4912-4a7d-83a6-729f39c67506"),
                            CreatedAt = new DateTime(2000, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 38"
                        },
                        new
                        {
                            Id = new Guid("5c42f805-0de8-4469-b2e2-0979461a1548"),
                            CreatedAt = new DateTime(2000, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 39"
                        },
                        new
                        {
                            Id = new Guid("657dd5c4-5552-4b87-bca3-94c99838aded"),
                            CreatedAt = new DateTime(2000, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 40"
                        },
                        new
                        {
                            Id = new Guid("f098b4be-4145-44a3-8e36-c6405c3635dd"),
                            CreatedAt = new DateTime(2000, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 41"
                        },
                        new
                        {
                            Id = new Guid("7cd4ca61-1dd8-4447-9068-c106f6362fdd"),
                            CreatedAt = new DateTime(2000, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 42"
                        },
                        new
                        {
                            Id = new Guid("5d48744e-457a-4175-a0a5-6dca50467e8f"),
                            CreatedAt = new DateTime(2000, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 43"
                        },
                        new
                        {
                            Id = new Guid("5c37a10b-b8b5-4a5a-bcb5-ba7a6117d7e2"),
                            CreatedAt = new DateTime(2000, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 44"
                        },
                        new
                        {
                            Id = new Guid("75881ccf-e7eb-44c3-90d2-e0650a05a1e4"),
                            CreatedAt = new DateTime(2000, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 45"
                        },
                        new
                        {
                            Id = new Guid("1acd2dbd-03e7-4bc1-83b9-d868cf4cc740"),
                            CreatedAt = new DateTime(2000, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 46"
                        },
                        new
                        {
                            Id = new Guid("256e223b-ca11-4e1d-962c-e7ac8c9833ff"),
                            CreatedAt = new DateTime(2000, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 47"
                        },
                        new
                        {
                            Id = new Guid("25fcf5e7-952d-449c-9c52-68381d371fe0"),
                            CreatedAt = new DateTime(2000, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 48"
                        },
                        new
                        {
                            Id = new Guid("9a925b7d-3c57-475b-bce4-45341f7a43aa"),
                            CreatedAt = new DateTime(2000, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 49"
                        },
                        new
                        {
                            Id = new Guid("3d9175bb-e875-4e01-bb86-7a015211519f"),
                            CreatedAt = new DateTime(2000, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category 50"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebApplication1.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebApplication1.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebApplication1.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Blog", b =>
                {
                    b.HasOne("WebApplication1.Models.Category", "Category")
                        .WithMany("Blogs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebApplication1.Models.Category", b =>
                {
                    b.Navigation("Blogs");
                });
#pragma warning restore 612, 618
        }
    }
}
